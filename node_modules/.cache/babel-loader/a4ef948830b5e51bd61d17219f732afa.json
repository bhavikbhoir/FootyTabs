{"ast":null,"code":"// import React, {Component} from 'react';\n// import {DateTime} from 'luxon';\n// import Modal from 'react-modal';\n// import './styles.css';\n// import {FiSettings} from 'react-icons/fi';\n// import DropdownButton from 'react-bootstrap/DropdownButton';\n// import Dropdown from 'react-bootstrap/Dropdown';\n// import Dashboard from './dashboard';\n// import Searchbar from './searchbar';\n// // import Header from './Header';\n// import Trialname from './trialname';\n// const NAME_LS = 'NAME_LS';\n// const customStyles = {\n//   content: {\n//     width: '400px',\n//     height: '400px',\n//     opacity: '0.9',\n//     top: '50%',\n//     left: '50%',\n//     right: 'auto',\n//     bottom: 'auto',\n//     marginRight: '-50%',\n//     transform: 'translate(-50%, -50%)',\n//     borderColor: '#0080ff',\n//     background: 'none',\n//     border: 'none'\n//   }\n// };\n// class Landingpage extends Component {\n//   constructor(props) {\n//     super(props);\n//     var time = this.getTime();\n//     this.state = {\n//       time,\n//       name: [],\n//       isNameRequired: false,\n//       salutation: this.determineSalutation(time.hour),\n//       quote: null,\n//       geolocation: {\n//         latitude: null,\n//         longitude: null\n//       },\n//       location: null,\n//       temperature: null,\n//       weatherAPIKey: '594d083c4f45203a1d8cf6c1f7dd0a0b',\n//       weatherIcon: null,\n//       modalIsOpen: false,\n//       inputValue: ''\n//     };\n//     this.closeModal = this.closeModal.bind(this);\n//     this.handleChange = this.handleChange.bind(this);\n//   }\n//   closeModal() {\n//     this.setState({modalIsOpen: false});\n//     this.setState({name: this.state.inputValue});\n//     localStorage.setItem(NAME_LS, this.state.inputValue);\n//   }\n//   handleChange(e) {\n//     this.setState({inputValue: e.target.value});\n//   }\n//   componentWillMount() {\n//     navigator.geolocation.getCurrentPosition(\n//       position =>\n//         this.setState(\n//           {\n//             geolocation: {\n//               latitude: position.coords.latitude,\n//               longitude: position.coords.longitude\n//             }\n//           },\n//           () => this.updateWeather()\n//         ),\n//       () => {\n//         throw 'Error occured!';\n//       }\n//     );\n//     Modal.setAppElement('body');\n//   }\n//   componentDidMount() {\n//     const name = localStorage.getItem(NAME_LS);\n//     if (name) {\n//       this.setState({name});\n//     } else {\n//       this.setState({modalIsOpen: true});\n//     }\n//     fetch('https://horizonshq.herokuapp.com/api/inspirationalquotes')\n//       .then(resp => resp.json())\n//       .then(resp => this.setState({quote: resp.message}));\n//     setInterval(() => {\n//       var time = DateTime.local();\n//       this.setState({\n//         time,\n//         salutation: this.determineSalutation(time.hour)\n//       });\n//     }, 1000 * 1);\n//   }\n//   determineSalutation(hour) {\n//     if (hour > 11 && hour < 19) {\n//       return 'afternoon';\n//     } else if (hour > 18) {\n//       return 'evening';\n//     } else {\n//       return 'morning';\n//     }\n//   }\n//   determineWeatherCondition(str) {\n//     switch (str) {\n//       case 'Rain':\n//         return 'wi-day-rain';\n//       case 'Thunderstorm':\n//         return 'wi-day-thunderstorm';\n//       case 'Drizzle':\n//         return 'wi-day-showers';\n//       case 'Extreme':\n//         return 'wi-day-snow-thunderstorm';\n//       case 'Snow':\n//         return 'wi-day-snow';\n//       case 'Clouds':\n//         return 'wi-day-cloudy';\n//       case 'Clear':\n//         return 'wi-day-sunny';\n//       default:\n//         return null;\n//     }\n//   }\n//   updateWeather() {\n//     fetch(\n//       `http://api.openweathermap.org/data/2.5/weather?APPID=${\n//         this.state.weatherAPIKey\n//       }&lat=${this.state.geolocation.latitude}&lon=${\n//         this.state.geolocation.longitude\n//       }`\n//     )\n//       .then(resp => resp.json())\n//       .then(resp =>\n//         this.setState({\n//           location: resp.name,\n//           temperature: Math.round(resp.main.temp - 273.15),\n//           weatherIcon: this.determineWeatherCondition(resp.weather[0].main)\n//         })\n//       );\n//   }\n//   getTime() {\n//     return DateTime.local();\n//   }\n//   getBGStyle(category = 'HK') {\n//     return {\n//     //   backgroundImage: `url(https://source.unsplash.com/collection/10767820/1920x1080/daily?${category})`,\n//       backgroundImage: `url(https://source.unsplash.com/lBhhnhndpE0/1920x1080/`,\n//       backgroundSize: 'cover',\n//       height: '100vh',\n//       width: '100%',\n//       opacity: '0.9'\n//     }\n//   }\n//   logout = () => {\n//       this.setState({name: ''});\n//       this.setState({modalIsOpen: true});\n//   }\n//   render() {\n//     return (\n//       <div style={this.getBGStyle(this.state.category)}>\n//         <div className=\"bg-wrapper\">\n//         <div className=\"top-left\">\n//             <div>\n//               <p>Welcome {this.state.name}</p>\n//               <Trialname />\n//             </div>\n//           </div>\n//           <div className=\"text-right top-right weather\">\n//             <div>\n//               <i className={`wi ${this.state.weatherIcon}`} />&nbsp;<span id=\"weather\" />\n//               {this.state.temperature}&#8451;\n//             </div>\n//             <h5 id=\"location\">{this.state.location}</h5>\n//           </div>\n//           <div className=\"text-center centered\">\n//             <div className=\"block-text\">\n//               <h1 id=\"time\">{this.state.time.toFormat(\"h':'mm\")}</h1>\n//               <h2 id=\"ampm\">{this.state.time.toFormat('a')}</h2>\n//             </div>\n//             <h3 id=\"greetings\">\n//               Good {this.state.salutation}, {this.state.name}\n//             </h3>\n//             <Searchbar />\n//             <Modal\n//               isOpen={this.state.modalIsOpen}\n//               style={customStyles}\n//               contentLabel=\"name-modal\"\n//             >\n//               <div className=\"modal-content\">\n//                 <div className=\"modal-title\">What's your Jersey Name?</div>\n//                   <div className=\"modal-input\" >\n//                     <input name=\"name\" type=\"text\" onChange={this.handleChange}/>\n//                   </div>\n//                   <div className=\"modal-btn\">\n//                     <button className=\"modal-button\" onClick={this.closeModal}>\n//                       Enter\n//                     </button>\n//                   </div>\n//               </div>\n//             </Modal>\n//           </div>\n//           <div className=\"center-right dashboard\">\n//             <h3>Your dashboard</h3>\n//             <Dashboard />\n//           </div>\n//           <div className=\"text-center bottom-third quote\">\n//             <div id=\"quote-text\">{this.state.quote}</div>\n//           </div>\n//           <div className=\"text-right bottom-right\">\n//           <Dropdown id=\"settings\">\n//             <Dropdown.Toggle>\n//             <FiSettings/>\n//             </Dropdown.Toggle>\n//             <Dropdown.Menu>\n//               <Dropdown.Item eventKey=\"1\" onClick={this.logout}>Logout</Dropdown.Item>\n//               {/* <Dropdown.Item eventKey=\"2\">Blue</Dropdown.Item>\n//               <Dropdown.Item eventKey=\"3\" active>\n//                 Orange\n//               </Dropdown.Item>\n//               <Dropdown.Item eventKey=\"1\">Red-Orange</Dropdown.Item> */}\n//             </Dropdown.Menu>\n//           </Dropdown>\n//             {/* <div id=\"settings\">\n//               <button><i class=\"FiSettings\"><FiSettings/></i> Settings</button>\n//             </div> */}\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// export default Landingpage;","map":{"version":3,"sources":["D:/reactjs/FootyTabs/src/components/landingpage.js"],"names":[],"mappingssourcesContent":["// import React, {Component} from 'react';\r\n// import {DateTime} from 'luxon';\r\n// import Modal from 'react-modal';\r\n// import './styles.css';\r\n// import {FiSettings} from 'react-icons/fi';\r\n// import DropdownButton from 'react-bootstrap/DropdownButton';\r\n// import Dropdown from 'react-bootstrap/Dropdown';\r\n// import Dashboard from './dashboard';\r\n// import Searchbar from './searchbar';\r\n// // import Header from './Header';\r\n// import Trialname from './trialname';\r\n\r\n\r\n// const NAME_LS = 'NAME_LS';\r\n\r\n// const customStyles = {\r\n//   content: {\r\n//     width: '400px',\r\n//     height: '400px',\r\n//     opacity: '0.9',\r\n//     top: '50%',\r\n//     left: '50%',\r\n//     right: 'auto',\r\n//     bottom: 'auto',\r\n//     marginRight: '-50%',\r\n//     transform: 'translate(-50%, -50%)',\r\n//     borderColor: '#0080ff',\r\n//     background: 'none',\r\n//     border: 'none'\r\n//   }\r\n// };\r\n\r\n// class Landingpage extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     var time = this.getTime();\r\n\r\n//     this.state = {\r\n//       time,\r\n//       name: [],\r\n//       isNameRequired: false,\r\n//       salutation: this.determineSalutation(time.hour),\r\n//       quote: null,\r\n//       geolocation: {\r\n//         latitude: null,\r\n//         longitude: null\r\n//       },\r\n//       location: null,\r\n//       temperature: null,\r\n//       weatherAPIKey: '594d083c4f45203a1d8cf6c1f7dd0a0b',\r\n//       weatherIcon: null,\r\n//       modalIsOpen: false,\r\n//       inputValue: ''\r\n//     };\r\n\r\n//     this.closeModal = this.closeModal.bind(this);\r\n//     this.handleChange = this.handleChange.bind(this);\r\n//   }\r\n\r\n//   closeModal() {\r\n//     this.setState({modalIsOpen: false});\r\n//     this.setState({name: this.state.inputValue});\r\n//     localStorage.setItem(NAME_LS, this.state.inputValue);\r\n//   }\r\n\r\n//   handleChange(e) {\r\n//     this.setState({inputValue: e.target.value});\r\n//   }\r\n\r\n//   componentWillMount() {\r\n//     navigator.geolocation.getCurrentPosition(\r\n//       position =>\r\n//         this.setState(\r\n//           {\r\n//             geolocation: {\r\n//               latitude: position.coords.latitude,\r\n//               longitude: position.coords.longitude\r\n//             }\r\n//           },\r\n//           () => this.updateWeather()\r\n//         ),\r\n//       () => {\r\n//         throw 'Error occured!';\r\n//       }\r\n//     );\r\n//     Modal.setAppElement('body');\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     const name = localStorage.getItem(NAME_LS);\r\n//     if (name) {\r\n//       this.setState({name});\r\n//     } else {\r\n//       this.setState({modalIsOpen: true});\r\n//     }\r\n\r\n//     fetch('https://horizonshq.herokuapp.com/api/inspirationalquotes')\r\n//       .then(resp => resp.json())\r\n//       .then(resp => this.setState({quote: resp.message}));\r\n\r\n//     setInterval(() => {\r\n//       var time = DateTime.local();\r\n//       this.setState({\r\n//         time,\r\n//         salutation: this.determineSalutation(time.hour)\r\n//       });\r\n//     }, 1000 * 1);\r\n//   }\r\n\r\n//   determineSalutation(hour) {\r\n//     if (hour > 11 && hour < 19) {\r\n//       return 'afternoon';\r\n//     } else if (hour > 18) {\r\n//       return 'evening';\r\n//     } else {\r\n//       return 'morning';\r\n//     }\r\n//   }\r\n\r\n//   determineWeatherCondition(str) {\r\n//     switch (str) {\r\n//       case 'Rain':\r\n//         return 'wi-day-rain';\r\n//       case 'Thunderstorm':\r\n//         return 'wi-day-thunderstorm';\r\n//       case 'Drizzle':\r\n//         return 'wi-day-showers';\r\n//       case 'Extreme':\r\n//         return 'wi-day-snow-thunderstorm';\r\n//       case 'Snow':\r\n//         return 'wi-day-snow';\r\n//       case 'Clouds':\r\n//         return 'wi-day-cloudy';\r\n//       case 'Clear':\r\n//         return 'wi-day-sunny';\r\n//       default:\r\n//         return null;\r\n//     }\r\n//   }\r\n\r\n//   updateWeather() {\r\n//     fetch(\r\n//       `http://api.openweathermap.org/data/2.5/weather?APPID=${\r\n//         this.state.weatherAPIKey\r\n//       }&lat=${this.state.geolocation.latitude}&lon=${\r\n//         this.state.geolocation.longitude\r\n//       }`\r\n//     )\r\n//       .then(resp => resp.json())\r\n//       .then(resp =>\r\n//         this.setState({\r\n//           location: resp.name,\r\n//           temperature: Math.round(resp.main.temp - 273.15),\r\n//           weatherIcon: this.determineWeatherCondition(resp.weather[0].main)\r\n//         })\r\n//       );\r\n//   }\r\n\r\n//   getTime() {\r\n//     return DateTime.local();\r\n//   }\r\n\r\n//   getBGStyle(category = 'HK') {\r\n//     return {\r\n//     //   backgroundImage: `url(https://source.unsplash.com/collection/10767820/1920x1080/daily?${category})`,\r\n//       backgroundImage: `url(https://source.unsplash.com/lBhhnhndpE0/1920x1080/`,\r\n//       backgroundSize: 'cover',\r\n//       height: '100vh',\r\n//       width: '100%',\r\n//       opacity: '0.9'\r\n//     }\r\n//   }\r\n\r\n//   logout = () => {\r\n//       this.setState({name: ''});\r\n//       this.setState({modalIsOpen: true});\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <div style={this.getBGStyle(this.state.category)}>\r\n//         <div className=\"bg-wrapper\">\r\n          \r\n//         <div className=\"top-left\">\r\n//             <div>\r\n//               <p>Welcome {this.state.name}</p>\r\n//               <Trialname />\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"text-right top-right weather\">\r\n//             <div>\r\n//               <i className={`wi ${this.state.weatherIcon}`} />&nbsp;<span id=\"weather\" />\r\n//               {this.state.temperature}&#8451;\r\n//             </div>\r\n//             <h5 id=\"location\">{this.state.location}</h5>\r\n//           </div>\r\n//           <div className=\"text-center centered\">\r\n//             <div className=\"block-text\">\r\n//               <h1 id=\"time\">{this.state.time.toFormat(\"h':'mm\")}</h1>\r\n//               <h2 id=\"ampm\">{this.state.time.toFormat('a')}</h2>\r\n//             </div>\r\n//             <h3 id=\"greetings\">\r\n//               Good {this.state.salutation}, {this.state.name}\r\n//             </h3>\r\n//             <Searchbar />\r\n//             <Modal\r\n//               isOpen={this.state.modalIsOpen}\r\n//               style={customStyles}\r\n//               contentLabel=\"name-modal\"\r\n//             >\r\n//               <div className=\"modal-content\">\r\n//                 <div className=\"modal-title\">What's your Jersey Name?</div>\r\n//                   <div className=\"modal-input\" >\r\n//                     <input name=\"name\" type=\"text\" onChange={this.handleChange}/>\r\n//                   </div>\r\n//                   <div className=\"modal-btn\">\r\n//                     <button className=\"modal-button\" onClick={this.closeModal}>\r\n//                       Enter\r\n//                     </button>\r\n//                   </div>\r\n//               </div>\r\n//             </Modal>\r\n//           </div>\r\n//           <div className=\"center-right dashboard\">\r\n//             <h3>Your dashboard</h3>\r\n//             <Dashboard />\r\n//           </div>\r\n//           <div className=\"text-center bottom-third quote\">\r\n//             <div id=\"quote-text\">{this.state.quote}</div>\r\n//           </div>\r\n//           <div className=\"text-right bottom-right\">\r\n//           <Dropdown id=\"settings\">\r\n//             <Dropdown.Toggle>\r\n//             <FiSettings/>\r\n//             </Dropdown.Toggle>\r\n\r\n//             <Dropdown.Menu>\r\n//               <Dropdown.Item eventKey=\"1\" onClick={this.logout}>Logout</Dropdown.Item>\r\n//               {/* <Dropdown.Item eventKey=\"2\">Blue</Dropdown.Item>\r\n//               <Dropdown.Item eventKey=\"3\" active>\r\n//                 Orange\r\n//               </Dropdown.Item>\r\n//               <Dropdown.Item eventKey=\"1\">Red-Orange</Dropdown.Item> */}\r\n//             </Dropdown.Menu>\r\n//           </Dropdown>\r\n//             {/* <div id=\"settings\">\r\n//               <button><i class=\"FiSettings\"><FiSettings/></i> Settings</button>\r\n//             </div> */}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Landingpage;"]},"metadata":{},"sourceType":"module"}